Without Hash Map
class Solution {
public:
    string getHint(string secret, string guess) {
        int arr[26] = {0},brr[26] = {0};
        int size = secret.size(),bulls = 0 ,cows = 0;
        for(int i = 0; i < size ; i++){
            if(secret[i]==guess[i])
                bulls++;
            else{
                arr[secret[i]-'0']++;
                brr[guess[i]-'0']++;
            }
        }
        for(char i = 0; i < 26 ;i++){
            if(arr[i]>0 && brr[i]>0)
                cows+= min(arr[i],brr[i]);
        }
        string str = to_string(bulls) + "A" + to_string(cows) +"B";
        return str;
    }
};
With HashMap
class Solution {
public:
    string getHint(string secret, string guess) {
        unordered_map<char,int> map1,map2;
        int size = secret.size(),bulls = 0 ,cows = 0;
        for(int i = 0; i < size ; i++){
            if(secret[i]==guess[i])
                bulls++;
            else{
                 if(map1.count(secret[i])==1)
                     map1[secret[i]]++;
                 else
                     map1[secret[i]] = 1;
                
                 if(map2.count(guess[i]) == 1)
                     map2[guess[i]]++;
                 else
                     map2[guess[i]] = 1;
            }
        }
        for(char i = 0; i < 26 ;i++){
             if(map1.count(i) == 1 && map2.count(i) == 1)
                 cows = cows + min(map1[i],map2[i]);
                    }
        string str = to_string(bulls) + "A" + to_string(cows) +"B";
        return str;
    }
};
